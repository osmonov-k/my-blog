name: Deploy to VPS

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "nginx/**"
      - "docker-compose.prod.yml"
      - ".github/workflows/deploy-backend.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1) Upload files from runner -> VPS
      - name: Upload backend, nginx, docker-compose to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }} # ⬅️ paste full OpenSSH private key as a secret
          port: 22 # change if non-standard
          source: |
            backend/**
            nginx/**
            docker-compose.prod.yml
          target: ~/app
          rm: true # remove target files that no longer exist in source (optional)

      # 2) Run remote commands on VPS
      - name: Run deploy commands on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }} # ⬅️ pass the key here (this fixes your error)
          port: 22
          script: |
            set -e

            echo "Ensuring directories..."
            mkdir -p ~/app/{backend,nginx,certbot}

            echo "Switching compose file name..."
            cp ~/app/docker-compose.prod.yml ~/app/docker-compose.yml

            echo "Docker compose up..."
            cd ~/app
            docker compose down || true
            docker compose pull
            docker compose up -d --build

            echo "Waiting for services..."
            sleep 15

            # Optional: run DB migrations inside the backend container.
            # Make sure your compose gives the container a predictable name or use 'docker compose exec'.
            echo "Running migrations..."
            docker compose exec -T backend npm run migrate
